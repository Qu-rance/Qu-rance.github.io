<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Node.js on WSL</title>
    <link href="/posts/f5ebcee2/"/>
    <url>/posts/f5ebcee2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录在 WSL 上安装 <strong>Node.js</strong> 的过程。</p><p>参考资料：<a href="https://learn.microsoft.com/zh-cn/windows/dev-environment/javascript/nodejs-on-wsl">Microsoft Learn</a></p></blockquote><h2 id="一、安装-nvm、node-js-和-npm"><a href="#一、安装-nvm、node-js-和-npm" class="headerlink" title="一、安装 nvm、node.js 和 npm"></a>一、安装 nvm、node.js 和 npm</h2><p>Node.js 的版本变化速度非常快，根据不同项目需求可能需要在多个版本的 Node.js 之间进行切换。因此可能通过安装 Node 版本管理器 <strong>nvm</strong> 来安装和管理多个版本的 Node.js，下面是安装步骤</p><h3 id="1-安装-nvm"><a href="#1-安装-nvm" class="headerlink" title="1. 安装 nvm"></a>1. 安装 nvm</h3><p>使用 cURL（用于在命令行中从 Internet 下载内容的工具）执行以下命令安装 nvm：<code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash</code></p><p>注：上述命令将下载并运行 <code>install.sh</code> 脚本文件，由于网络问题，实际在 WSL 运行时发现遇到报错 <code>curl: (7) Failed to connect to raw.githubusercontent.com port 443 after 112 ms: Connection refused</code>，因此直接通过 windows 访问 <a href="https://github.com/nvm-sh/nvm">Github 仓库</a> 下载其中的 <code>install.sh</code> 后在 WSL 中运行以完成安装</p><p>输入 <code>command -v nvm</code> 后若返回 “nvm” 则说明安装成功（或通过 <code>nvm --version</code> 可以查看到版本信息）.</p><p>安装完成后在家目录将出现文件夹 <code>.nvm</code>，此后安装的 Node 和相应的 npm 将出现在 <code>~/.nvm/versions/node</code> 中，每个版本对应一个子文件夹</p><h3 id="2-查看安装的-Node-版本"><a href="#2-查看安装的-Node-版本" class="headerlink" title="2. 查看安装的 Node 版本"></a>2. 查看安装的 Node 版本</h3><p>列出当前安装的 Node 版本（此时应为无）：<code>nvm ls</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>-&gt;     system<br>iojs -&gt; N/A (default)<br>node -&gt; stable (-&gt; N/A) (default)<br>unstable -&gt; N/A (default)<br>lts/* -&gt; lts/iron (-&gt; N/A)<br>lts/argon -&gt; v4.9.1 (-&gt; N/A)<br>lts/boron -&gt; v6.17.1 (-&gt; N/A)<br>lts/carbon -&gt; v8.17.0 (-&gt; N/A)<br>lts/dubnium -&gt; v10.24.1 (-&gt; N/A)<br>lts/erbium -&gt; v12.22.12 (-&gt; N/A)<br>lts/fermium -&gt; v14.21.3 (-&gt; N/A)<br>lts/gallium -&gt; v16.20.2 (-&gt; N/A)<br>lts/hydrogen -&gt; v18.20.3 (-&gt; N/A)<br>lts/iron -&gt; v20.15.0 (-&gt; N/A)<br></code></pre></td></tr></table></figure><h3 id="3-安装-Node-js-的当前版本和稳定的-LTS-版本"><a href="#3-安装-Node-js-的当前版本和稳定的-LTS-版本" class="headerlink" title="3. 安装 Node.js 的当前版本和稳定的 LTS 版本"></a>3. 安装 Node.js 的当前版本和稳定的 LTS 版本</h3><ul><li>安装 Node.js 的当前稳定的 LTS 版本（推荐用于生产应用程序）：<code>nvm install --lts</code></li><li>安装 Node.js 的当前版本（用于测试最新的 Node.js 功能和改进，但更容易出现问题）：<code>nvm install node</code></li></ul><p>完成安装后，列出安装的 Node 版本：<code>nvm ls</code>。现在应会看到刚安装的两个版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">-&gt;     v20.15.1<br>        v22.4.1<br>default -&gt; lts/* (-&gt; v20.15.1)<br>iojs -&gt; N/A (default)<br>unstable -&gt; N/A (default)<br>node -&gt; stable (-&gt; v22.4.1) (default)<br>stable -&gt; 22.4 (-&gt; v22.4.1) (default)<br>lts/* -&gt; lts/iron (-&gt; v20.15.1)<br>lts/argon -&gt; v4.9.1 (-&gt; N/A)<br>lts/boron -&gt; v6.17.1 (-&gt; N/A)<br>lts/carbon -&gt; v8.17.0 (-&gt; N/A)<br>lts/dubnium -&gt; v10.24.1 (-&gt; N/A)<br>lts/erbium -&gt; v12.22.12 (-&gt; N/A)<br>lts/fermium -&gt; v14.21.3 (-&gt; N/A)<br>lts/gallium -&gt; v16.20.2 (-&gt; N/A)<br>lts/hydrogen -&gt; v18.20.4 (-&gt; N/A)<br>lts/iron -&gt; v20.15.1<br></code></pre></td></tr></table></figure><h3 id="4-Node-js-版本切换"><a href="#4-Node-js-版本切换" class="headerlink" title="4. Node.js 版本切换"></a>4. Node.js 版本切换</h3><p>通过命令行快速切换和使用不同版本的 node. Example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ nvm use 16<br>Now using node v16.9.1 (npm v7.21.1)<br>$ node -v<br>v16.9.1<br>$ nvm use 14<br>Now using node v14.18.0 (npm v6.14.15)<br>$ node -v<br>v14.18.0<br>$ nvm install 12<br>Now using node v12.22.6 (npm v6.14.5)<br>$ node -v<br>v12.22.6<br></code></pre></td></tr></table></figure><p>注：输入 <code>nvm use node</code> 切换到当前版本，输入 <code>nvm use --lts</code> 切换到 LTS 版本</p><h2 id="二、替代版本管理器"><a href="#二、替代版本管理器" class="headerlink" title="二、替代版本管理器"></a>二、替代版本管理器</h2><blockquote><p>该部分详见 <a href="https://learn.microsoft.com/zh-cn/windows/dev-environment/javascript/nodejs-on-wsl">Microsoft Learn</a></p></blockquote><p>虽然 nvm 目前是最常用的节点版本管理器，但需要考虑一些替代版本管理器：</p><ul><li><a href="https://www.npmjs.com/package/n#installation">n</a> 是长期存在的 nvm 替代方法，该方法使用略微不同的命令来完成相同的操作，并通过 npm 而不是 bash 脚本来安装。</li><li><a href="https://github.com/Schniz/fnm#using-a-script">fnm</a> 是较新的版本管理器，它声称比 nvm 快得多。 （它还使用 Azure 管道。）</li><li><a href="https://github.com/volta-cli/volta#installing-volta">Volta</a> 是来自 LinkedIn 团队的新版本管理器，它声称改进了速度和跨平台支持。</li><li><a href="https://asdf-vm.com/#/core-manage-asdf-vm">asdf-vm</a> 是适用于多种语言的单个 CLI，例如将 ike gvm、nvm、rbenv 和 pyenv（等）整合在一起。</li><li><a href="https://github.com/jasongin/nvs">nvs</a>（Node 版本切换器）是跨平台的 nvm 替代方法，可与 VS Code 集成。</li></ul>]]></content>
    
    
    <categories>
      
      <category>CS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node.js</tag>
      
      <tag>环境安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/4a17b156/"/>
    <url>/posts/4a17b156/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
